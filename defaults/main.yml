---
# Copyright 2016, Rackspace US, Inc.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
cloudkitty_username: cloudkitty
cloudkitty_user_password: secrete
cloudkitty_git_repo: https://github.com/openstack/cloudkitty.git
cloudkitty_git_install_branch: master
cloudkitty_requirements_git_repo: https://git.openstack.org/openstack/requirements
cloudkitty_requirements_git_install_branch: master
cloudkitty_developer_mode: false
cloudkitty_developer_constraints:
  - "git+{{ cloudkitty_git_repo }}@{{ cloudkitty_git_install_branch }}#egg=cloudkitty"

cloudkitty_pip_packages:
  - "{{ cloudkitty_developer_constraints }}"

# Name of the virtual env to deploy into
cloudkitty_venv_tag: untagged
cloudkitty_venv_bin: "/openstack/venvs/cloudkitty-{{ cloudkitty_venv_tag }}/bin"

# Set this to enable or disable installing in a venv
cloudkitty_venv_enabled: true

# The bin path defaults to the venv path however if installation in a
#  venv is disabled the bin path will be dynamically set based on the
#  system path used when the installing.
cloudkitty_bin: "{{ cloudkitty_venv_bin }}"


# CloudKitty conf file settings
# Configuration file for WSGI definition of API. (string value)
cloudkitty_api_paste_config: api_paste.ini
# The strategy to use for auth. Supports noauth and keystone (string value)
# Supported values: noauth, keystone
cloudkitty_auth_strategy: keystone
# Name of this node. This can be an opaque identifier. It is not
# necessarily a hostname, FQDN, or IP address. However, the node name
# must be valid within an AMQP key, and if using ZeroMQ, a valid
# hostname, FQDN, or IP address. (string value)
cloudkitty_host: shock
# From oslo.messaging
# Size of RPC connection pool. (integer value)
# Deprecated group/name - [DEFAULT]/rpc_conn_pool_size
cloudkitty_rpc_conn_pool_size: 30
# ZeroMQ bind address. Should be a wildcard (*), an ethernet
# interface, or IP. The "host" option should point or resolve to this
# address. (string value)
cloudkitty_rpc_zmq_bind_address: *
# MatchMaker driver. (string value)
cloudkitty_rpc_zmq_matchmaker: local
# ZeroMQ receiver listening port. (integer value)
cloudkitty_rpc_zmq_port: 9501
# Number of ZeroMQ contexts, defaults to 1. (integer value)
cloudkitty_rpc_zmq_contexts: 1
# Maximum number of ingress messages to locally buffer per topic.
# Default is unlimited. (integer value)
cloudkitty_rpc_zmq_topic_backlog: 0
# Directory for holding IPC sockets. (string value)
cloudkitty_rpc_zmq_ipc_dir: /var/run/openstack
# Name of this node. Must be a valid hostname, FQDN, or IP address.
# Must match "host" option, if running Nova. (string value)
cloudkitty_rpc_zmq_host: localhost
# Seconds to wait before a cast expires (TTL). Only supported by
# impl_zmq. (integer value)
cloudkitty_rpc_cast_timeout: 30
# Heartbeat frequency. (integer value)
cloudkitty_matchmaker_heartbeat_freq: 300
# Heartbeat time-to-live. (integer value)
cloudkitty_matchmaker_heartbeat_ttl: 600
# Size of executor thread pool. (integer value)
# Deprecated group/name - [DEFAULT]/rpc_thread_pool_size
cloudkitty_executor_thread_pool_size: 64
# The Drivers(s) to handle sending notifications. Possible values are
# messaging, messagingv2, routing, log, test, noop (multi valued)
cloudkitty_notification_driver:
  - messaging
  - messagingv2
  - routing
  - log
  - test
  - noop
# AMQP topic used for OpenStack notifications. (list value)
# Deprecated group/name - [rpc_notifier2]/topics
cloudkitty_notification_topics: notifications
# Seconds to wait for a response from a call. (integer value)
cloudkitty_rpc_response_timeout: 60
# A URL representing the messaging driver to use and its full
# configuration. If not set, we fall back to the rpc_backend option
# and driver specific configuration. (string value)
cloudkitty_transport_url:
# The messaging driver to use, defaults to rabbit. Other drivers
# include qpid and zmq. (string value)
cloudkitty_rpc_backend: rabbit
# The default exchange under which topics are scoped. May be
# overridden by an exchange name specified in the transport_url
# option. (string value)
cloudkitty_control_exchange: openstack
# Host serving the API. (string value)
cloudkitty_api_host_ip: 0.0.0.0
# Host port serving the API. (integer value)
cloudkitty_api_port: 8889
# Data collector. (string value)
# FIXME: possible values are ceilometer, gnocchi, fake
cloudkitty_collector: ceilometer
# Number of samples to collect per call. (integer value)
cloudkitty_window: 1800
# Rating period in seconds. (integer value)
cloudkitty_period: 3600
# Wait for N periods before collecting new data. (integer value)
cloudkitty_wait_periods: 2
# Services to monitor. (list value)
cloudkitty_services:
  - compute
  - image
  - volume
  - network.bw.in
  - network.bw.out
  - network.floating
# From oslo.middleware.cors
# Indicate whether this resource may be shared with the domain
# received in the requests "origin" header. (list value)
# FIXME
cloudkitty_cors_allowed_origin:
# Indicate that the actual request can include user credentials
# (boolean value)
cloudkitty_cors_allow_credentials: true
# Indicate which headers are safe to expose to the API. Defaults to
# HTTP Simple Headers. (list value)
cloudkitty_cors_expose_headers:
  - X-Auth-Token
  - X-Subject-Token
  - X-Service-Token
  - X-OpenStack-Request-ID
  - X-Server-Management-Url
# Maximum cache age of CORS preflight requests. (integer value)
cloudkitty_cors_max_age: 3600
# Indicate which methods can be used during the actual request. (list
# value)
cloudkitty_cors_allow_methods:
  - GET
  - PUT
  - POST
  - DELETE
  - PATCH
# Indicate which header field names may be used during the actual
# request. (list value)
cloudkitty_cors_allow_headers:
  - X-Auth-Token
  - X-Identity-Status
  - X-Roles
  - X-Service-Catalog
  - X-User-Id
  - X-Tenant-Id
  - X-OpenStack-Request-ID
  - X-Server-Management-Url
# From oslo.middleware.cors
# Indicate whether this resource may be shared with the domain
# received in the requests "origin" header. (list value)
cloudkitty_cors_subdomain_allowed_origin:
# Indicate that the actual request can include user credentials
# (boolean value)
cloudkitty_cors_subdomain_allow_credentials: true

# Indicate which headers are safe to expose to the API. Defaults to
# HTTP Simple Headers. (list value)
cloudkitty_cors_subdomain_expose_headers:
  - X-Auth-Token
  - X-Subject-Token
  - X-Service-Token
  - X-OpenStack-Request-ID
  - X-Server-Management-Url

# Maximum cache age of CORS preflight requests. (integer value)
cloudkitty_cors_subdomain_max_age: 3600

# Indicate which methods can be used during the actual request. (list value)
cloudkitty_cors_subdomain_allow_methods:
  - GET
  - PUT
  - POST
  - DELETE
  - PATCH

# Indicate which header field names may be used during the actual
# request. (list value)
cloudkitty_cors_subdomain_allow_headers:
  - X-Auth-Token
  - X-Identity-Status
  - X-Roles
  - X-Service-Catalog
  - X-User-Id
  - X-Tenant-Id
  - X-OpenStack-Request-ID
  - X-Server-Management-Url
#[database]
# From oslo.db
# The file name to use with SQLite. (string value)
# Deprecated group/name - [DEFAULT]/sqlite_db
cloudkitty_sqlite_db: oslo.sqlite
# If True, SQLite uses synchronous mode. (boolean value)
# Deprecated group/name - [DEFAULT]/sqlite_synchronous
cloudkitty_sqlite_synchronous: true

# The back end to use for the database. (string value)
# Deprecated group/name - [DEFAULT]/db_backend
cloudkitty_database_backend: sqlalchemy
# The SQLAlchemy connection string to use to connect to the database.
# (string value)
# Deprecated group/name - [DEFAULT]/sql_connection
# Deprecated group/name - [DATABASE]/sql_connection
# Deprecated group/name - [sql]/connection
cloudkitty_database_connection: "mysql+pymysql://root:secrete@127.0.0.1/cloudkitty?charset=utf8"
# The SQLAlchemy connection string to use to connect to the slave
# database. (string value)
cloudkitty_database_slave_connection:
# The SQL mode to be used for MySQL sessions. This option, including
# the default, overrides any server-set SQL mode. To use whatever SQL
# mode is set by the server configuration, set this to no value.
# Example: mysql_sql_mode= (string value)
cloudkitty_mysql_sql_mode: TRADITIONAL
# Timeout before idle SQL connections are reaped. (integer value)
# Deprecated group/name - [DEFAULT]/sql_idle_timeout
# Deprecated group/name - [DATABASE]/sql_idle_timeout
# Deprecated group/name - [sql]/idle_timeout
cloudkitty_database_idle_timeout: 3600
# Minimum number of SQL connections to keep open in a pool. (integer
# value)
# Deprecated group/name - [DEFAULT]/sql_min_pool_size
# Deprecated group/name - [DATABASE]/sql_min_pool_size
cloudkitty_database_min_pool_size: 1
# Maximum number of SQL connections to keep open in a pool. (integer
# value)
# Deprecated group/name - [DEFAULT]/sql_max_pool_size
# Deprecated group/name - [DATABASE]/sql_max_pool_size
cloudkity_database_max_pool_size:
# Maximum number of database connection retries during startup. Set to
# -1 to specify an infinite retry count. (integer value)
# Deprecated group/name - [DEFAULT]/sql_max_retries
# Deprecated group/name - [DATABASE]/sql_max_retries
cloudkitty_database_max_retries: 10
# Interval between retries of opening a SQL connection. (integer
# value)
# Deprecated group/name - [DEFAULT]/sql_retry_interval
# Deprecated group/name - [DATABASE]/reconnect_interval
cloudkitty_database_retry_interval: 10
# If set, use this value for max_overflow with SQLAlchemy. (integer
# value)
# Deprecated group/name - [DEFAULT]/sql_max_overflow
# Deprecated group/name - [DATABASE]/sqlalchemy_max_overflow
cloudkitty_database_max_overflow:
# Verbosity of SQL debugging information: 0=None, 100=Everything.
# (integer value)
# Deprecated group/name - [DEFAULT]/sql_connection_debug
cloudkitty_database_connection_debug: 0
# Add Python stack traces to SQL as comment strings. (boolean value)
# Deprecated group/name - [DEFAULT]/sql_connection_trace
cloudkitty_database_connection_trace: false
# If set, use this value for pool_timeout with SQLAlchemy. (integer
# value)
# Deprecated group/name - [DATABASE]/sqlalchemy_pool_timeout
cloudkitty_database_pool_timeout:
# Enable the experimental use of database reconnect on connection
# lost. (boolean value)
cloudkitty_database_use_db_reconnect: false
# Seconds between retries of a database transaction. (integer value)
cloudkitty_database_db_retry_interval: 1
# If True, increases the interval between retries of a database
# operation up to db_max_retry_interval. (boolean value)
cloudkitty_database_db_inc_retry_interval: true
# If db_inc_retry_interval is set, the maximum seconds between retries
# of a database operation. (integer value)
cloudkitty_database_db_max_retry_interval: 10
# Maximum retries in case of connection error or deadlock error before
# error is raised. Set to -1 to specify an infinite retry count.
# (integer value)
cloudkitty_database_db_max_retries: 20

#[keystone_authtoken]
# From keystonemiddleware.auth_token
# Complete public Identity API endpoint. (string value)
cloudkitty_keystone_authtoken_auth_uri:
# API version of the admin Identity API endpoint. (string value)
cloudkitty_keystone_authtoken_auth_version:
# Do not handle authorization requests within the middleware, but
# delegate the authorization decision to downstream WSGI components.
# (boolean value)
cloudkitty_keystone_authtoken_delay_auth_decision: false
# Request timeout value for communicating with Identity API server.
# (integer value)
cloudkitty_keystone_authtoken_http_connect_timeout:
# How many times are we trying to reconnect when communicating with
# Identity API Server. (integer value)
cloudkitty_keystone_authtoken_http_request_max_retries: 3
# Env key for the swift cache. (string value)
cloudkitty_keystone_authtoken_cache:
# Required if identity server requires client certificate (string value)
cloudkitty_keystone_authtoken_certfile:
# Required if identity server requires client certificate (string value)
cloudkitty_keystone_authtoken_keyfile:
# A PEM encoded Certificate Authority to use when verifying HTTPs
# connections. Defaults to system CAs. (string value)
cloudkitty_keystone_authtoken_cafile:
# Verify HTTPS connections. (boolean value)
cloudkitty_keystone_authtoken_insecure: false
# Directory used to cache files related to PKI tokens. (string value)
cloudkitty_keystone_authtoken_signing_dir:
# Optionally specify a list of memcached server(s) to use for caching.
# If left undefined, tokens will instead be cached in-process. (list value)
# Deprecated group/name - [DEFAULT]/memcache_servers
cloudkitty_keystone_authtoken_memcached_servers:
# In order to prevent excessive effort spent validating tokens, the
# middleware caches previously-seen tokens for a configurable duration
# (in seconds). Set to -1 to disable caching completely. (integer value)
cloudkitty_keystone_authtoken_token_cache_time: 300
# Determines the frequency at which the list of revoked tokens is
# retrieved from the Identity service (in seconds). A high number of
# revocation events combined with a low cache duration may
# significantly reduce performance. (integer value)
cloudkitty_keystone_authtoken_revocation_cache_time: 10
# (Optional) If defined, indicate whether token data should be
# authenticated or authenticated and encrypted. Acceptable values are
# MAC or ENCRYPT.  If MAC, token data is authenticated (with HMAC) in
# the cache. If ENCRYPT, token data is encrypted and authenticated in
# the cache. If the value is not one of these options or empty,
# auth_token will raise an exception on initialization. (string value)
cloudkitty_keystone_authtoken_memcache_security_strategy:
# (Optional, mandatory if memcache_security_strategy is defined) This
# string is used for key derivation. (string value)
cloudkitty_keystone_authtoken_memcache_secret_key:
# (Optional) Number of seconds memcached server is considered dead
# before it is tried again. (integer value)
cloudkitty_keystone_authtoken_memcache_pool_dead_retry: 300
# (Optional) Maximum total number of open connections to every
# memcached server. (integer value)
cloudkitty_keystone_authtoken_memcache_pool_maxsize: 10
# (Optional) Socket timeout in seconds for communicating with a
# memcached server. (integer value)
cloudkitty_keystone_authtoken_memcache_pool_socket_timeout: 3
# (Optional) Number of seconds a connection to memcached is held
# unused in the pool before it is closed. (integer value)
cloudkitty_keystone_authtoken_memcache_pool_unused_timeout: 60
# (Optional) Number of seconds that an operation will wait to get a
# memcached client connection from the pool. (integer value)
cloudkitty_keystone_authtoken_memcache_pool_conn_get_timeout: 10
# (Optional) Use the advanced (eventlet safe) memcached client pool.
# The advanced pool will only work under python 2.x. (boolean value)
cloudkitty_keystone_authtoken_memcache_use_advanced_pool: false
# (Optional) Indicate whether to set the X-Service-Catalog header. If
# False, middleware will not ask for service catalog on token
# validation and will not set the X-Service-Catalog header. (boolean value)
cloudkitty_keystone_authtoken_include_service_catalog: true
# Used to control the use and type of token binding. Can be set to:
# "disabled" to not check token binding. "permissive" (default) to
# validate binding information if the bind type is of a form known to
# the server and ignore it if not. "strict" like "permissive" but if
# the bind type is unknown the token will be rejected. "required" any
# form of token binding is needed to be allowed. Finally the name of a
# binding method that must be present in tokens. (string value)
cloudkitty_keystone_authtoken_enforce_token_bind: permissive
# If true, the revocation list will be checked for cached tokens. This
# requires that PKI tokens are configured on the identity server. (boolean value)
cloudkitty_keystone_authtoken_check_revocations_for_cached: false
# Hash algorithms to use for hashing PKI tokens. This may be a single
# algorithm or multiple. The algorithms are those supported by Python
# standard hashlib.new(). The hashes will be tried in the order given,
# so put the preferred one first for performance. The result of the
# first hash will be stored in the cache. This will typically be set
# to multiple values only while migrating from a less secure algorithm
# to a more secure one. Once all the old tokens are expired this
# option should be set to a single value for better performance. (list value)
cloudkitty_keystone_authtoken_hash_algorithms: md5
# Complete admin Identity API endpoint. This should specify the
# unversioned root endpoint e.g. https://localhost:35357/ (string
# value)
cloudkitty_keystone_authtoken_identity_uri:
# Service username. (string value)
cloudkitty_keystone_authtoken_admin_user:
# Service user password. (string value)
cloudkitty_keystone_authtoken_admin_password:
# Service tenant name. (string value)
cloudkitty_keystone_authtoken_admin_tenant_name: admin
#[keystone_fetcher]
# From cloudkitty.common.config
# Keystone version to use. (string value)
cloudkitty_keystone_version: 2
#[matchmaker_redis]
# From oslo.messaging
# Host to locate redis. (string value)
cloudkitty_matchmaker_redis_host: 127.0.0.1
# Use this port to connect to redis host. (integer value)
cloudkitty_matchmaker_redis_port: 6379
# Password for Redis server (optional). (string value)
cloudkitty_matchmaker_redis_password:

#[matchmaker_ring]

#
# From oslo.messaging
#

# Matchmaker ring file (JSON). (string value)
# Deprecated group/name - [DEFAULT]/matchmaker_ringfile
cloudkitty_matchmaker_ring_ringfile: /etc/oslo/matchmaker_ring.json


#[oslo_messaging_amqp]

#
# From oslo.messaging
#

# address prefix used when sending to a specific server (string value)
# Deprecated group/name - [amqp1]/server_request_prefix
cloudkitty_oslo_messaging_amqp_server_request_prefix: exclusive

# address prefix used when broadcasting to all servers (string value)
# Deprecated group/name - [amqp1]/broadcast_prefix
cloudkitty_oslo_messaging_amqp_broadcast_prefix: broadcast

# address prefix when sending to any server in group (string value)
# Deprecated group/name - [amqp1]/group_request_prefix
cloudkitty_oslo_messaging_amqp_group_request_prefix: unicast

# Name for the AMQP container (string value)
# Deprecated group/name - [amqp1]/container_name
cloudkitty_oslo_messaging_amqp_container_name:

# Timeout for inactive connections (in seconds) (integer value)
# Deprecated group/name - [amqp1]/idle_timeout
cloudkitty_oslo_messaging_amqp_idle_timeout: 0

# Debug: dump AMQP frames to stdout (boolean value)
# Deprecated group/name - [amqp1]/trace
cloudkitty_oslo_messaging_amqp_trace: {{ debug }}

# CA certificate PEM file to verify server certificate (string value)
# Deprecated group/name - [amqp1]/ssl_ca_file
cloudkitty_oslo_messaging_amqp_ssl_ca_file:

# Identifying certificate PEM file to present to clients (string
# value)
# Deprecated group/name - [amqp1]/ssl_cert_file
cloudkitty_oslo_messaging_amqp_ssl_cert_file:

# Private key PEM file used to sign cert_file certificate (string
# value)
# Deprecated group/name - [amqp1]/ssl_key_file
cloudkitty_oslo_messaging_amqp_ssl_key_file:

# Password for decrypting ssl_key_file (if encrypted) (string value)
# Deprecated group/name - [amqp1]/ssl_key_password
cloudkitty_oslo_messaging_amqp_ssl_key_password:

# Accept clients using either SSL or plain TCP (boolean value)
# Deprecated group/name - [amqp1]/allow_insecure_clients
cloudkitty_oslo_messaging_amqp_allow_insecure_clients: false


#[oslo_messaging_qpid]

#
# From oslo.messaging
#

# Use durable queues in AMQP. (boolean value)
# Deprecated group/name - [DEFAULT]/amqp_durable_queues
# Deprecated group/name - [DEFAULT]/rabbit_durable_queues
cloudkitty_oslo_messaging_qpid_amqp_durable_queues: false

# Auto-delete queues in AMQP. (boolean value)
# Deprecated group/name - [DEFAULT]/amqp_auto_delete
cloudkitty_oslo_messaging_qpid_amqp_auto_delete: false

# Send a single AMQP reply to call message. The current behaviour
# since oslo-incubator is to send two AMQP replies - first one with
# the payload, a second one to ensure the other have finish to send
# the payload. We are going to remove it in the N release, but we must
# keep backward compatible at the same time. This option provides such
# compatibility - it defaults to False in Liberty and can be turned on
# for early adopters with a new installations or for testing. Please
# note, that this option will be removed in the Mitaka release.
# (boolean value)
cloudkitty_oslo_messaging_qpid_send_single_reply: false

# Qpid broker hostname. (string value)
# Deprecated group/name - [DEFAULT]/qpid_hostname
cloudkitty_oslo_messaging_qpid_qpid_hostname: localhost

# Qpid broker port. (integer value)
# Deprecated group/name - [DEFAULT]/qpid_port
cloudkitty_oslo_messaging_qpid_qpid_port: 5672

# Qpid HA cluster host:port pairs. (list value)
# Deprecated group/name - [DEFAULT]/qpid_hosts
cloudkitty_oslo_messaging_qpid_qpid_hosts: $qpid_hostname:$qpid_port

# Username for Qpid connection. (string value)
# Deprecated group/name - [DEFAULT]/qpid_username
cloudkitty_oslo_messaging_qpid_qpid_username:

# Password for Qpid connection. (string value)
# Deprecated group/name - [DEFAULT]/qpid_password
cloudkitty_oslo_messaging_qpid_qpid_password:

# Space separated list of SASL mechanisms to use for auth. (string
# value)
# Deprecated group/name - [DEFAULT]/qpid_sasl_mechanisms
cloudkitty_oslo_messaging_qpid_qpid_sasl_mechanisms:

# Seconds between connection keepalive heartbeats. (integer value)
# Deprecated group/name - [DEFAULT]/qpid_heartbeat
cloudkitty_oslo_messaging_qpid_qpid_heartbeat: 60

# Transport to use, either 'tcp' or 'ssl'. (string value)
# Deprecated group/name - [DEFAULT]/qpid_protocol
cloudkitty_oslo_messaging_qpid_qpid_protocol: tcp

# Whether to disable the Nagle algorithm. (boolean value)
# Deprecated group/name - [DEFAULT]/qpid_tcp_nodelay
cloudkitty_oslo_messaging_qpid_qpid_tcp_nodelay: true

# The number of prefetched messages held by receiver. (integer value)
# Deprecated group/name - [DEFAULT]/qpid_receiver_capacity
cloudkitty_oslo_messaging_qpid_qpid_receiver_capacity: 1

# The qpid topology version to use.  Version 1 is what was originally
# used by impl_qpid.  Version 2 includes some backwards-incompatible
# changes that allow broker federation to work.  Users should update
# to version 2 when they are able to take everything down, as it
# requires a clean break. (integer value)
# Deprecated group/name - [DEFAULT]/qpid_topology_version
cloudkitty_oslo_messaging_qpid_qpid_topology_version: 1


#[oslo_messaging_rabbit]

#
# From oslo.messaging
#

# Use durable queues in AMQP. (boolean value)
# Deprecated group/name - [DEFAULT]/amqp_durable_queues
# Deprecated group/name - [DEFAULT]/rabbit_durable_queues
cloudkitty_oslo_messaging_rabbit_amqp_durable_queues: false

# Auto-delete queues in AMQP. (boolean value)
# Deprecated group/name - [DEFAULT]/amqp_auto_delete
cloudkitty_oslo_messaging_rabbit_amqp_auto_delete: false

# Send a single AMQP reply to call message. The current behaviour
# since oslo-incubator is to send two AMQP replies - first one with
# the payload, a second one to ensure the other have finish to send
# the payload. We are going to remove it in the N release, but we must
# keep backward compatible at the same time. This option provides such
# compatibility - it defaults to False in Liberty and can be turned on
# for early adopters with a new installations or for testing. Please
# note, that this option will be removed in the Mitaka release.
# (boolean value)
cloudkitty_oslo_messaging_rabbit_send_single_reply: false

# SSL version to use (valid only if SSL enabled). Valid values are
# TLSv1 and SSLv23. SSLv2, SSLv3, TLSv1_1, and TLSv1_2 may be
# available on some distributions. (string value)
# Deprecated group/name - [DEFAULT]/kombu_ssl_version
cloudkitty_oslo_messaging_rabbit_kombu_ssl_version:

# SSL key file (valid only if SSL enabled). (string value)
# Deprecated group/name - [DEFAULT]/kombu_ssl_keyfile
cloudkitty_oslo_messaging_rabbit_kombu_ssl_keyfile:

# SSL cert file (valid only if SSL enabled). (string value)
# Deprecated group/name - [DEFAULT]/kombu_ssl_certfile
cloudkitty_oslo_messaging_rabbit_kombu_ssl_certfile:

# SSL certification authority file (valid only if SSL enabled).
# (string value)
# Deprecated group/name - [DEFAULT]/kombu_ssl_ca_certs
cloudkitty_oslo_messaging_rabbit_kombu_ssl_ca_certs:

# How long to wait before reconnecting in response to an AMQP consumer
# cancel notification. (floating point value)
# Deprecated group/name - [DEFAULT]/kombu_reconnect_delay
cloudkitty_oslo_messaging_rabbit_kombu_reconnect_delay: 1.0

# How long to wait before considering a reconnect attempt to have
# failed. This value should not be longer than rpc_response_timeout.
# (integer value)
cloudkitty_oslo_messaging_rabbit_kombu_reconnect_timeout: 60

# The RabbitMQ broker address where a single node is used. (string
# value)
# Deprecated group/name - [DEFAULT]/rabbit_host
cloudkitty_oslo_messaging_rabbit_rabbit_host: localhost

# The RabbitMQ broker port where a single node is used. (integer
# value)
# Deprecated group/name - [DEFAULT]/rabbit_port
cloudkitty_oslo_messaging_rabbit_rabbit_port: 5672

# RabbitMQ HA cluster host:port pairs. (list value)
# Deprecated group/name - [DEFAULT]/rabbit_hosts
cloudkitty_oslo_messaging_rabbit_rabbit_hosts: "{{ cloudkitty_oslo_messaging_rabbit_rabbit_host }}:{{ cloudkitty_oslo_messaging_rabbit_rabbit_port }}"

# Connect over SSL for RabbitMQ. (boolean value)
# Deprecated group/name - [DEFAULT]/rabbit_use_ssl
cloudkitty_oslo_messaging_rabbit_rabbit_use_ssl: false

# The RabbitMQ userid. (string value)
# Deprecated group/name - [DEFAULT]/rabbit_userid
cloudkitty_oslo_messaging_rabbit_rabbit_userid: guest

# The RabbitMQ password. (string value)
# Deprecated group/name - [DEFAULT]/rabbit_password
cloudkitty_oslo_messaging_rabbit_rabbit_password: guest

# The RabbitMQ login method. (string value)
# Deprecated group/name - [DEFAULT]/rabbit_login_method
cloudkitty_oslo_messaging_rabbit_rabbit_login_method: AMQPLAIN

# The RabbitMQ virtual host. (string value)
# Deprecated group/name - [DEFAULT]/rabbit_virtual_host
cloudkitty_oslo_messaging_rabbit_rabbit_virtual_host: /

# How frequently to retry connecting with RabbitMQ. (integer value)
cloudkitty_oslo_messaging_rabbit_rabbit_retry_interval: 1

# How long to backoff for between retries when connecting to RabbitMQ.
# (integer value)
# Deprecated group/name - [DEFAULT]/rabbit_retry_backoff
cloudkitty_oslo_messaging_rabbit_rabbit_retry_backoff: 2

# Maximum number of RabbitMQ connection retries. Default is 0
# (infinite retry count). (integer value)
# Deprecated group/name - [DEFAULT]/rabbit_max_retries
cloudkitty_oslo_messaging_rabbit_rabbit_max_retries: 0

# Use HA queues in RabbitMQ (x-ha-policy: all). If you change this
# option, you must wipe the RabbitMQ database. (boolean value)
# Deprecated group/name - [DEFAULT]/rabbit_ha_queues
cloudkitty_oslo_messaging_rabbit_rabbit_ha_queues: false

# Number of seconds after which the Rabbit broker is considered down
# if heartbeat's keep-alive fails (0 disable the heartbeat).
# EXPERIMENTAL (integer value)
cloudkitty_oslo_messaging_rabbit_heartbeat_timeout_threshold: 60

# How often times during the heartbeat_timeout_threshold we check the
# heartbeat. (integer value)
cloudkitty_oslo_messaging_rabbit_heartbeat_rate: 2

# Deprecated, use rpc_backend=kombu+memory or rpc_backend=fake
# (boolean value)
# Deprecated group/name - [DEFAULT]/fake_rabbit
cloudkitty_oslo_messaging_rabbit_fake_rabbit: false
#[output]
# From cloudkitty.common.config
# Backend for the output manager. (string value)
cloudkitty_output_backend: cloudkitty.backend.file.FileBackend
# Storage directory for the file output backend. (string value)
cloudkitty_output_basepath: /var/lib/cloudkitty/states/
# Output pipeline (list value)
cloudkitty_output_pipeline: osrf
#[state]
# From cloudkitty.common.config
# Backend for the state manager. (string value)
cloudkitty_state_backend: cloudkitty.backend.file.FileBackend
# Storage directory for the file state backend. (string value)
cloudkitty_state_basepath: /var/lib/cloudkitty/states/
#[storage]
# From cloudkitty.common.config
# Name of the storage backend driver. (string value)
cloudkitty_storage_backend: sqlalchemy
#[tenant_fetcher]
# From cloudkitty.common.config
# Driver used to fetch tenant list. (string value)
cloudkitty_tenant_fetcher_backend: keystone
